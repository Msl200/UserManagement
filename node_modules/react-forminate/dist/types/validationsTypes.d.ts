import { ValidationPatternType, MessageType, MinType, MaxType, MinLengthType, MaxLengthType, ValidationCustomRuleType } from './primitiveTypes';
export type DateTimePatternType = `${number}-${number}-${number}` | `${number}-${number}-${number}T${number}:${number}:${number}Z` | `${number}-${number}-${number}T${number}:${number}` | `${number}-${number}-${number}T${number}:${number}:${number}` | `${number}-${number}-${number}T${number}:${number}:${number}.${number}Z` | `${number}/${number}/${number}` | `${number}.${number}.${number}` | `${string} ${number}, ${number}` | `${number} ${string} ${number}` | `${number}${number}${number}` | `${number}-${number}` | `${number}:${number}` | `${number}:${number}:${number}` | `${number}/${number}/${number} ${number}:${number}` | `${number}-${number}-${number} ${number}:${number}` | `${number}-${number}-${number} ${number}:${number}:${number}` | `${number}.${number}.${number} ${number}:${number}` | `${string} ${number}, ${number} ${number}:${number}`;
export interface ValidationRule {
    pattern?: ValidationPatternType;
    message?: MessageType;
    min?: MinType;
    max?: MaxType;
    minLength?: MinLengthType;
    maxLength?: MaxLengthType;
    custom?: ValidationCustomRuleType;
    type?: string;
    minDate?: DateTimePatternType;
    maxDate?: DateTimePatternType;
    minItems?: number;
    maxItems?: number;
}
export interface ValidationResponseType {
    isValid: boolean;
    message?: string;
}
